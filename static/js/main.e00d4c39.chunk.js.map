{"version":3,"sources":["components/Statistic/Statistic.module.css","components/Feedback/Feedback.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/Notification/Notification.js","components/Statistic/Statistic.js","components/Feedback/Feedback.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","className","s","notification","Statistic","good","neutral","bad","total","percent","totalFeedback","goodPercent","box","item","Feedback","state","feedback","name","onClick","Section","title","App","event","btn","target","setState","prevState","GetTotafFeedback","Object","keys","reduce","acc","value","PositiveFeedbackPercentage","Math","round","this","container","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e00d4c39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Statistic_box__1-QHb\",\"item\":\"Statistic_item__dRmPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__25Y4y\",\"form\":\"Feedback_form__8NDXA\",\"good\":\"Feedback_good__1B7Om\",\"neutral\":\"Feedback_neutral__1armF\",\"bad\":\"Feedback_bad__1p_Wi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__32jxR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2slNR\"};","import s from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <h3 className={s.notification}>{message}</h3>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React from 'react';\nimport Notification from '../Notification/Notification';\nimport s from './Statistic.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistic = ({ good, neutral, bad, total, percent }) => {\n  const totalFeedback = total();\n  const goodPercent = percent();\n  return (\n    <div className={s.box}>\n      {!!totalFeedback ? (\n        <ul>\n          <li className={s.item}>Good: {good}</li>\n          <li className={s.item}>Neutral: {neutral}</li>\n          <li className={s.item}>Bad: {bad}</li>\n          <li className={s.item}>Total: {totalFeedback}</li>\n          <li className={s.item}>Positive Feedback: {goodPercent}%</li>\n        </ul>\n      ) : (\n        <Notification message=\"There is no feedback\" />\n      )}\n    </div>\n  );\n};\n\nStatistic.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport s from './Feedback.module.css';\nimport PropTypes from 'prop-types';\n\nconst Feedback = ({ state, feedback }) => (\n  <div className=\"\">\n    <ul className=\"\">\n      <li className=\"\">\n        <button className={s.good} name=\"good\" onClick={feedback}>\n          Good\n        </button>\n      </li>\n      <li className=\"\">\n        <button className={s.neutral} name=\"neutral\" onClick={feedback}>\n          Neutral\n        </button>\n      </li>\n      <li className=\"\">\n        <button className={s.bad} name=\"bad\" onClick={feedback}>\n          Bad\n        </button>\n      </li>\n    </ul>\n  </div>\n);\n\nFeedback.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n};\n\nexport default Feedback;\n","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title }) => {\n  return <h2 className={s.title}>{title}</h2>;\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import s from './components/Feedback/Feedback.module.css';\nimport Statistic from './components/Statistic/Statistic';\nimport Feedback from './components/Feedback/Feedback';\nimport Section from './components/Section/Section';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  Feedback = event => {\n    const btn = event.target.name;\n\n    this.setState(prevState => ({\n      [btn]: (prevState[btn] += 1),\n    }));\n  };\n\n  GetTotafFeedback = () => {\n    const totalFeedback = Object.keys(this.state).reduce(\n      (acc, value) => acc + this.state[value],\n      0,\n    );\n    return totalFeedback;\n  };\n\n  PositiveFeedbackPercentage = () => {\n    const percent = Math.round(\n      (this.state.good * 100) / this.GetTotafFeedback(),\n    );\n    return percent;\n  };\n\n  render() {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n\n    return (\n      <div className={s.container}>\n        <Section title=\"Please leave feedback\" />\n        <Feedback state={this.state} feedback={this.Feedback} />\n        <Section title=\"Statistics\" />\n        <Statistic\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.GetTotafFeedback}\n          percent={this.PositiveFeedbackPercentage}\n        />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}